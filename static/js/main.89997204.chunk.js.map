{"version":3,"sources":["App/utils/reactnPersist.tsx","App/utils/setupDefaults.tsx","App/components/Filters/Filters.tsx","App/components/Map/Map.tsx","App/components/SideBar/components/PlacesSearch/PlacesSearch.tsx","svg/Pin.tsx","svg/Circle.tsx","App/components/SideBar/components/CurrentLocation/CurrentLocation.tsx","components/ExpandableList.tsx","App/components/SideBar/components/SavedLocations/SavedLocations.tsx","App/components/SideBar/components/Suspects/Suspects.tsx","App/components/SideBar/SideBar.tsx","App/App.tsx","index.tsx"],"names":["Persist","initialGlobal","invalidateMs","localStorageKey","this","global","getGlobal","addCallback","storeGlobal","setGlobal","localStorage","setItem","JSON","stringify","lastModified","moment","toISOString","item","getItem","parse","diff","toSuspectData","name","radius","startTime","endTime","location","lat","lng","Tabletop","init","key","simpleSheet","parseNumbers","then","data","map","suspects","savedAddresses","initialise","Filters","rest","Map","useGlobal","currentPosition","setCurrentPosition","searchedAddress","Container","style","width","height","position","google","zoom","defaultZoom","initialCenter","defaultCenter","center","onDragend","undefined","address","i","title","firstLine","icon","suspect","styled","div","PlacesSearch","useState","searchString","setSearchString","setSearchedAddress","handleChange","useCallback","handleSelect","value","suggestion","description","geocodeByPlaceId","placeId","results","getLatLng","full","formattedSuggestion","mainText","secondLine","secondaryText","catch","error","console","ListItem","component","debounce","onChange","searchOptions","getInputProps","suggestions","options","label","SelectContainer","menuIsOpen","length","filterOption","onInputChange","target","components","defaultComponents","placeholder","DropdownIndicator","IndicatorSeparator","window","maps","LatLng","componentRestrictions","country","Pin","color","viewBox","fill","d","CurrentLocation","setSavedAddresses","saveSearchedAddress","addresses","push","existingLocation","useMemo","find","ListItemIcon","ListItemText","primary","secondary","ButtonContainer","Button","disabled","variant","onClick","ExpandableList","subHeader","children","open","setOpen","handleClick","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","subheader","SavedLocations","NoLocationsSubheader","enabled","Typography","Suspects","SideBar","Card","ColumnContainer","OuterContainer","ReactDOM","render","flex","document","getElementById"],"mappings":"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","file":"static/js/main.89997204.chunk.js","sourcesContent":["import moment from \"moment\";\nimport { State } from \"reactn/default\";\nimport { setGlobal, addCallback } from \"reactn\";\n\nclass Persist {\n  localStorageKey = \"QFI_TIMELINE_TOOL\";\n  initialGlobal: State;\n  invalidateMs?: number;\n\n  constructor(initialGlobal: State, invalidateMs?: number) {\n    this.initialGlobal = initialGlobal;\n    this.invalidateMs = invalidateMs;\n  }\n\n  initialise(): void {\n    const global = this.getGlobal();\n    addCallback(global => this.storeGlobal(global));\n    setGlobal(global);\n  }\n\n  storeGlobal(global: State): void {\n    localStorage.setItem(\n      this.localStorageKey,\n      JSON.stringify({\n        lastModified: moment().toISOString(),\n        global\n      })\n    );\n  }\n\n  getGlobal(): State {\n    const item = localStorage.getItem(this.localStorageKey);\n    if (!item) {\n      return this.initialGlobal;\n    }\n\n    const { lastModified, global } = JSON.parse(item);\n    if (\n      lastModified &&\n      this.invalidateMs &&\n      moment().diff(lastModified) > this.invalidateMs\n    ) {\n      return this.initialGlobal;\n    }\n\n    if (!global) {\n      return this.initialGlobal;\n    }\n\n    return global;\n  }\n}\n\nexport { Persist };\n","import { Persist } from \"./reactnPersist\";\nimport { getGlobal, setGlobal } from \"reactn\";\nimport Tabletop from \"tabletop\";\nimport { SuspectData } from \"reactn/default\";\n\ninterface SheetData {\n  name: string;\n  address: string;\n  lat: number;\n  lng: number;\n  startTime: string;\n  endTime: string;\n  radius: number;\n}\n\nTabletop.init({\n  key: \"1qcsUcO02_Ppf965XmiuCYnZZik6pLiV3wO3fBvRwaQs\",\n  simpleSheet: true,\n  parseNumbers: true\n})\n  .then(data => data.map(toSuspectData))\n  .then((suspects: SheetData[]) => {\n    const global = getGlobal();\n    setGlobal({\n      ...global,\n      suspects\n    });\n  });\n\nfunction toSuspectData({\n  name,\n  radius,\n  startTime,\n  endTime,\n  lat,\n  lng\n}: SheetData): SuspectData {\n  return {\n    name,\n    radius,\n    startTime,\n    endTime,\n    location: { lat, lng }\n  };\n}\n\nconst defaultGlobal = {\n  savedAddresses: [],\n  suspects: []\n};\n\nconst persist = new Persist(defaultGlobal, 12 * 60 * 60 * 1000);\npersist.initialise();\n\nexport { persist };\n","import React from \"react\";\n\nfunction Filters({ ...rest }) {\n  return <div {...rest} />;\n}\n\nexport { Filters };\n","import React from \"react\";\nimport { useGlobal } from \"reactn\";\nimport styled from \"styled-components\";\nimport { Map as GoogleMap, Circle, Marker } from \"google-maps-react\";\n\ninterface Props {}\n\nfunction Map({ ...rest }: Props) {\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [suspects] = useGlobal(\"suspects\");\n\n  return (\n    <Container\n      style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n      {...rest}\n    >\n      <GoogleMap\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        google={google}\n        zoom={defaultZoom}\n        initialCenter={defaultCenter}\n        center={currentPosition}\n        onDragend={() => setCurrentPosition(undefined)}\n      >\n        {savedAddresses.map((address, i) => (\n          <Marker\n            title={address.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n            position={address.location}\n          />\n        ))}\n        {suspects.map((suspect, i) => (\n          <Circle key={i} center={suspect.location} radius={suspect.radius} />\n        ))}\n        {searchedAddress && (\n          <Marker\n            title={searchedAddress.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            position={searchedAddress.location}\n          />\n        )}\n      </GoogleMap>\n    </Container>\n  );\n}\n\nconst defaultCenter = { lat: -37.774376, lng: 144.947494 };\nconst defaultZoom = 15;\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport { Map };\n","import React, { useState, useCallback } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport Select from \"react-select\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction PlacesSearch({ ...rest }: Props) {\n  const [searchString, setSearchString] = useState(\"\");\n  const [, setSearchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const handleChange = useCallback(\n    (searchString: string) => {\n      if (searchString) {\n        setSearchString(searchString);\n      }\n    },\n    [setSearchString]\n  );\n\n  const handleSelect = useCallback(\n    value => {\n      if (!value) {\n        return;\n      }\n      const suggestion = value.value;\n      handleChange(suggestion.description);\n      geocodeByPlaceId(suggestion.placeId)\n        .then(results => getLatLng(results[0]))\n        .then(location => {\n          setSearchedAddress({\n            placeId: suggestion.placeId,\n            full: suggestion.description,\n            firstLine: suggestion.formattedSuggestion.mainText,\n            secondLine: suggestion.formattedSuggestion.secondaryText,\n            location\n          });\n          setCurrentPosition(location);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [handleChange, setSearchedAddress, setCurrentPosition]\n  );\n\n  return (\n    <ListItem component=\"div\" {...rest}>\n      <PlacesAutocomplete\n        debounce={500}\n        value={searchString}\n        onChange={handleChange}\n        searchOptions={searchOptions}\n      >\n        {({ getInputProps, suggestions }) => {\n          const { onChange } = getInputProps();\n\n          const options = suggestions.map(suggestion => ({\n            value: suggestion,\n            label: suggestion.description\n          }));\n\n          return (\n            <SelectContainer>\n              <Select\n                menuIsOpen={options.length > 0}\n                filterOption={() => true}\n                onInputChange={value => onChange({ target: { value } })}\n                components={defaultComponents}\n                placeholder={\"Search\"}\n                options={options}\n                onChange={handleSelect}\n              />\n            </SelectContainer>\n          );\n        }}\n      </PlacesAutocomplete>\n    </ListItem>\n  );\n}\n\nconst defaultComponents = {\n  DropdownIndicator: () => null,\n  IndicatorSeparator: () => null\n};\n\nconst google = (window as any).google;\nconst searchOptions = {\n  location: new google.maps.LatLng(-37, 144),\n  radius: 5000,\n  componentRestrictions: {\n    country: \"AU\"\n  }\n};\n\nconst SelectContainer = styled.div`\n  width: 100%;\n`;\n\nexport { PlacesSearch };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  color: string;\n  width: number;\n  height: number;\n}\n\nfunction Pin({ color, width, height, ...rest }: Props) {\n  return (\n    <Container {...rest}>\n      <svg style={{ width, height }} viewBox=\"0 0 24 24\">\n        <path\n          fill={color}\n          d=\"M12,11.5A2.5,2.5 0 0,1 9.5,9A2.5,2.5 0 0,1 12,6.5A2.5,2.5 0 0,1 14.5,9A2.5,2.5 0 0,1 12,11.5M12,2A7,7 0 0,0 5,9C5,14.25 12,22 12,22C12,22 19,14.25 19,9A7,7 0 0,0 12,2Z\"\n        />\n      </svg>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 0;\n`;\n\nexport { Pin };\n","import React from \"react\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  color: string;\n  width: number;\n  height: number;\n}\n\nfunction Circle({ color, width, height, ...rest }: Props) {\n  return (\n    <Container {...rest}>\n      <svg\n        style={{ width, height }}\n        viewBox=\"0 0 100 100\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <circle fill={color} cx=\"50\" cy=\"50\" r=\"50\" />\n      </svg>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 0;\n`;\n\nexport { Circle };\n","import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { Pin } from \"svg\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction CurrentLocation({ ...rest }: Props) {\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n\n  const saveSearchedAddress = useCallback(() => {\n    const addresses = [...savedAddresses];\n    if (searchedAddress) {\n      addresses.push(searchedAddress);\n    }\n    setSavedAddresses(addresses);\n  }, [savedAddresses, setSavedAddresses, searchedAddress]);\n\n  const existingLocation = useMemo(\n    () =>\n      !!searchedAddress &&\n      !!savedAddresses.find(\n        address => address.placeId === searchedAddress.placeId\n      ),\n    [savedAddresses, searchedAddress]\n  );\n\n  if (!searchedAddress) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <ListItem component=\"div\" {...rest}>\n        <ListItemIcon>\n          <Pin width={30} height={30} color=\"red\" />\n        </ListItemIcon>\n        <ListItemText\n          primary={searchedAddress.firstLine}\n          secondary={searchedAddress.secondLine}\n        ></ListItemText>\n      </ListItem>\n      <ButtonContainer>\n        <Button\n          disabled={existingLocation}\n          variant=\"outlined\"\n          onClick={saveSearchedAddress}\n        >\n          {existingLocation ? \"Saved\" : \"Save Location\"}\n        </Button>\n      </ButtonContainer>\n    </Fragment>\n  );\n}\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport { CurrentLocation };\n","import React, {\n  useState,\n  useCallback,\n  Fragment,\n  FunctionComponent\n} from \"react\";\nimport { List, ListItem, ListItemText, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\ninterface Props {\n  title: string;\n  subHeader: React.ReactElement;\n}\n\nconst ExpandableList: FunctionComponent<Props> = ({\n  title,\n  subHeader,\n  children\n}) => {\n  const [open, setOpen] = useState(true);\n  const handleClick = useCallback(() => setOpen(!open), [setOpen, open]);\n\n  return (\n    <Fragment>\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding subheader={subHeader}>\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport { ExpandableList };\n","import React from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction SavedLocations() {\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n\n  return (\n    <ExpandableList\n      title=\"Saved Locations\"\n      subHeader={<NoLocationsSubheader enabled={savedAddresses.length === 0} />}\n    >\n      {savedAddresses.map(address => (\n        <ListItem\n          key={address.placeId}\n          button\n          onClick={() => setCurrentPosition(address.location)}\n        >\n          <ListItemText\n            primary={address.firstLine}\n            secondary={address.secondLine}\n          />\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No saved locations yet...</Typography>;\n}\n\nexport { SavedLocations };\n","import React from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction Suspects() {\n  const [suspects] = useGlobal(\"suspects\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  return (\n    <ExpandableList\n      title=\"Suspect Locations\"\n      subHeader={<NoLocationsSubheader enabled={suspects.length === 0} />}\n    >\n      {suspects.map((suspect, i) => (\n        <ListItem\n          key={i}\n          button\n          onClick={() => setCurrentPosition(suspect.location)}\n        >\n          <ListItemText primary={suspect.name} />\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No suspects found</Typography>;\n}\n\nexport { Suspects };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  PlacesSearch,\n  CurrentLocation,\n  SavedLocations,\n  Suspects\n} from \"./components\";\n\ntype Props = {\n  style: React.CSSProperties;\n};\n\nfunction SideBar({ ...rest }: Props) {\n  return (\n    <List component={Card} {...rest}>\n      <PlacesSearch />\n      <CurrentLocation />\n      <SavedLocations />\n      <Suspects />\n    </List>\n  );\n}\n\nexport { SideBar };\n","import \"./utils/setupDefaults\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar, Map, Filters } from \"./components\";\n\nfunction App({ ...rest }) {\n  return (\n    <OuterContainer {...rest}>\n      <SideBar style={{ flex: \"1 1 100px\" }} />\n      <ColumnContainer style={{ flex: \"5 5 0\" }}>\n        <Map />\n        <Filters />\n      </ColumnContainer>\n    </OuterContainer>\n  );\n}\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst OuterContainer = styled(ColumnContainer)`\n  flex-direction: row;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}