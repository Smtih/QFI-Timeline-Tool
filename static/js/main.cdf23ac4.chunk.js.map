{"version":3,"sources":["App/utils/reactnPersist.tsx","App/utils/getQueryData.ts","App/utils/setupDefaults.tsx","App/components/Filters/Filters.tsx","App/components/Map/Map.tsx","App/components/SideBar/components/PlacesSearch/PlacesSearch.tsx","App/components/SideBar/components/CurrentLocation/CurrentLocation.tsx","components/ExpandableList.tsx","App/components/SideBar/components/SavedLocations/SavedLocations.tsx","App/components/SideBar/components/Suspects/Suspects.tsx","App/components/SideBar/SideBar.tsx","App/App.tsx","index.tsx"],"names":["Persist","initialGlobal","timeoutMs","globalStorageKey","timeoutStorageKey","this","localStorage","setItem","String","Number","getItem","onComplete","global","getGlobal","addCallback","storeGlobal","setGlobal","JSON","stringify","lastModified","moment","toISOString","item","parse","diff","queryString","window","location","search","key","timeout","undefined","getQueryData","a","Error","Tabletop","init","parseNumbers","sheets","suspectData","elements","suspects","map","suspect","visible","toMappable","addressData","savedAddresses","defaultDate","defaultLat","defaultLng","defaultZoomLevel","startDate","endDate","intervalMinutes","currentDate","defaultCenter","lat","lng","defaultZoom","rest","initialise","setTabletopData","then","history","replaceState","document","title","pathname","Filters","useGlobal","setCurrentDate","interval","Container","Row","Typography","formatDate","style","paddingRight","textAlign","Slider","value","unix","onChange","event","step","min","max","paddingLeft","date","format","styled","div","Map","currentPosition","setCurrentPosition","searchedAddress","eligibleSuspects","filter","startTime","endTime","isBetween","width","height","position","google","zoom","initialCenter","center","onDragend","i","firstLine","icon","radius","color","fillColor","strokeColor","PlacesSearch","useState","searchString","setSearchString","setSearchedAddress","handleChange","useCallback","handleSelect","suggestion","description","geocodeByPlaceId","placeId","results","getLatLng","formattedSuggestion","mainText","secondLine","secondaryText","catch","error","console","ListItem","component","debounce","searchOptions","getInputProps","suggestions","options","label","SelectContainer","menuIsOpen","length","filterOption","onInputChange","target","components","defaultComponents","placeholder","DropdownIndicator","IndicatorSeparator","maps","LatLng","componentRestrictions","country","CurrentLocation","setSavedAddresses","saveSearchedAddress","addresses","existingLocation","useMemo","find","address","button","onClick","ListItemIcon","src","alt","ListItemText","primary","secondary","ListItemSecondaryAction","Button","disabled","variant","ExpandableList","subHeader","children","open","setOpen","handleClick","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","List","disablePadding","subheader","SavedLocations","deleteAddress","placeIdToRemove","remaining","NoLocationsSubheader","enabled","IconButton","Suspects","setSuspects","toggleVisibility","newSuspects","newSuspect","indexOf","fontSize","name","SideBar","Card","ColumnContainer","OuterContainer","ReactDOM","render","flex","getElementById"],"mappings":"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","file":"static/js/main.cdf23ac4.chunk.js","sourcesContent":["import moment from \"moment\";\nimport { State } from \"reactn/default\";\nimport { setGlobal, addCallback } from \"reactn\";\n\nconst KEY_BASE = \"QFI_TIMELINE_TOOL\";\n\nclass Persist {\n  globalStorageKey = `${KEY_BASE}_GLOBAL`;\n  timeoutStorageKey = `${KEY_BASE}_TIMEOUT`;\n  initialGlobal: State;\n  timeoutMs: number;\n\n  constructor(initialGlobal: State, timeoutMs?: number) {\n    this.initialGlobal = initialGlobal;\n    if (timeoutMs != null) {\n      localStorage.setItem(this.timeoutStorageKey, String(timeoutMs));\n      this.timeoutMs = timeoutMs;\n    } else {\n      this.timeoutMs = Number(\n        localStorage.getItem(this.timeoutStorageKey) || 12 * 60 * 60 * 1000\n      );\n    }\n  }\n\n  initialise(onComplete: (global: State) => void): void {\n    const global = this.getGlobal();\n    addCallback(global => this.storeGlobal(global));\n    setGlobal(global);\n    onComplete(global);\n  }\n\n  storeGlobal(global: State): void {\n    localStorage.setItem(\n      this.globalStorageKey,\n      JSON.stringify({\n        lastModified: moment().toISOString(),\n        global\n      })\n    );\n  }\n\n  getGlobal(): State {\n    const item = localStorage.getItem(this.globalStorageKey);\n    if (!item) {\n      return this.initialGlobal;\n    }\n\n    const { lastModified, global } = JSON.parse(item);\n    if (lastModified && moment().diff(lastModified) > this.timeoutMs) {\n      return this.initialGlobal;\n    }\n\n    if (!global) {\n      return this.initialGlobal;\n    }\n\n    return global;\n  }\n}\n\nexport { Persist };\n","import queryString from \"query-string\";\n\ninterface QueryData {\n  key?: string;\n  timeout?: number;\n}\n\nfunction getQueryData(): QueryData {\n  const { key, timeout } = queryString.parse(window.location.search);\n  return {\n    key: typeof key === \"string\" ? key : undefined,\n    timeout:\n      typeof timeout === \"string\" ? Number(timeout) * 60 * 1000 : undefined\n  };\n}\n\nexport { getQueryData };\n","import Tabletop from \"tabletop\";\nimport { setGlobal } from \"reactn\";\nimport { Persist } from \"./reactnPersist\";\nimport { State } from \"reactn/default\";\nimport { getQueryData } from \"./getQueryData\";\n\ninterface LocationData {\n  lat: number;\n  lng: number;\n}\n\ninterface SuspectSheetData extends LocationData {\n  name: string;\n  color: string;\n  address: string;\n  startTime: string;\n  endTime: string;\n  radius: number;\n}\n\ninterface AddressSheetData extends LocationData {\n  placeId: string;\n  firstLine: string;\n  secondLine: string;\n}\n\ninterface SettingSheetData {\n  defaultDate: string;\n  defaultLat: string;\n  defaultLng: string;\n  startDate: string;\n  endDate: string;\n  intervalMinutes: number;\n  defaultZoomLevel: number;\n}\n\nconst { key, timeout } = getQueryData();\n\nasync function setTabletopData(global: State): Promise<void> {\n  if (global.key == null) {\n    if (!key) {\n      throw new Error(\"No Sheet Key In Url\");\n    }\n    const sheets = await Tabletop.init({\n      key,\n      parseNumbers: true\n    });\n    const suspectData: SuspectSheetData[] = sheets[\"Suspects\"].elements;\n    const suspects = suspectData\n      .map(suspect => ({ ...suspect, visible: true }))\n      .map(toMappable);\n\n    const addressData: AddressSheetData[] = sheets[\"Locations\"].elements;\n    const savedAddresses = addressData.map(toMappable);\n\n    const {\n      defaultDate,\n      defaultLat,\n      defaultLng,\n      defaultZoomLevel,\n      startDate,\n      endDate,\n      intervalMinutes\n    }: SettingSheetData = sheets[\"Settings\"].elements[0];\n\n    await setGlobal({\n      ...global,\n      key,\n      suspects,\n      savedAddresses,\n      currentDate: defaultDate,\n      defaultCenter: { lat: defaultLat, lng: defaultLng },\n      defaultZoom: defaultZoomLevel,\n      startDate,\n      endDate,\n      intervalMinutes\n    });\n  }\n}\n\nfunction toMappable({ lat, lng, ...rest }: LocationData) {\n  return {\n    ...rest,\n    location: { lat, lng }\n  };\n}\n\nconst defaultGlobal = {\n  savedAddresses: [],\n  suspects: [],\n  currentDate: \"2019-05-12T10:00:00.000+10\",\n  defaultCenter: { lat: -37.714145, lng: 145.065955 },\n  defaultZoom: 14,\n  intervalMinutes: 30,\n  startDate: \"2019-05-12T06:00:00.000+10\",\n  endDate: \"2019-05-14T22:00:00.000+10\"\n};\n\nconst persist = new Persist(defaultGlobal, timeout);\npersist.initialise(global => {\n  setTabletopData(global).then(() => {\n    window.history.replaceState({}, document.title, window.location.pathname);\n  });\n});\n\nexport { persist };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useGlobal } from \"reactn\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Filters({ ...rest }) {\n  const [currentDate, setCurrentDate] = useGlobal(\"currentDate\");\n  const [startDate] = useGlobal(\"startDate\");\n  const [endDate] = useGlobal(\"endDate\");\n  const [interval] = useGlobal(\"intervalMinutes\");\n\n  return (\n    <Container {...rest}>\n      <Row>\n        <Typography>{formatDate(currentDate)}</Typography>\n      </Row>\n      <Row>\n        <Typography style={{ paddingRight: 16, textAlign: \"right\" }}>\n          {formatDate(startDate)}\n        </Typography>\n        <Slider\n          value={moment(currentDate).unix()}\n          onChange={(event, value) =>\n            setCurrentDate(moment.unix(value as number).toISOString())\n          }\n          step={interval * 60}\n          min={moment(startDate).unix()}\n          max={moment(endDate).unix()}\n        />\n        <Typography style={{ paddingLeft: 16, textAlign: \"left\" }}>\n          {formatDate(endDate)}\n        </Typography>\n      </Row>\n    </Container>\n  );\n}\n\nfunction formatDate(date: string): string {\n  return moment(date).format(\"DD/MM/YYYY hh:mm a\");\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport { Filters };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useGlobal } from \"reactn\";\nimport { Map as GoogleMap, Circle, Marker } from \"google-maps-react\";\n\ninterface Props {}\n\nfunction Map({ ...rest }: Props) {\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [suspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [defaultZoom] = useGlobal(\"defaultZoom\");\n  const [defaultCenter] = useGlobal(\"defaultCenter\");\n\n  const eligibleSuspects = suspects.filter(\n    ({ startTime, endTime, visible }) =>\n      visible &&\n      moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n\n  return (\n    <Container\n      style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n      {...rest}\n    >\n      <GoogleMap\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        google={google}\n        zoom={defaultZoom}\n        initialCenter={defaultCenter}\n        center={currentPosition}\n        onDragend={() => setCurrentPosition(undefined)}\n      >\n        {savedAddresses.map(({ firstLine, location }, i) => (\n          <Marker\n            key={i}\n            title={firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n            position={location}\n          />\n        ))}\n        {eligibleSuspects.map(({ location, radius, color }, i) => (\n          <Circle\n            key={i}\n            center={location}\n            radius={radius}\n            fillColor={color}\n            strokeColor={color}\n          />\n        ))}\n        {searchedAddress && (\n          <Marker\n            title={searchedAddress.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            position={searchedAddress.location}\n          />\n        )}\n      </GoogleMap>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport { Map };\n","import React, { useState, useCallback } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport Select from \"react-select\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction PlacesSearch({ ...rest }: Props) {\n  const [searchString, setSearchString] = useState(\"\");\n  const [, setSearchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const handleChange = useCallback(\n    (searchString: string) => {\n      if (searchString) {\n        setSearchString(searchString);\n      }\n    },\n    [setSearchString]\n  );\n\n  const handleSelect = useCallback(\n    value => {\n      if (!value) {\n        return;\n      }\n      const suggestion = value.value;\n      handleChange(suggestion.description);\n      geocodeByPlaceId(suggestion.placeId)\n        .then(results => getLatLng(results[0]))\n        .then(location => {\n          setSearchedAddress({\n            placeId: suggestion.placeId,\n            firstLine: suggestion.formattedSuggestion.mainText,\n            secondLine: suggestion.formattedSuggestion.secondaryText,\n            location\n          });\n          setCurrentPosition(location);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [handleChange, setSearchedAddress, setCurrentPosition]\n  );\n\n  return (\n    <ListItem component=\"div\" {...rest}>\n      <PlacesAutocomplete\n        debounce={500}\n        value={searchString}\n        onChange={handleChange}\n        searchOptions={searchOptions}\n      >\n        {({ getInputProps, suggestions }) => {\n          const { onChange } = getInputProps();\n\n          const options = suggestions.map(suggestion => ({\n            value: suggestion,\n            label: suggestion.description\n          }));\n\n          return (\n            <SelectContainer>\n              <Select\n                menuIsOpen={options.length > 0}\n                filterOption={() => true}\n                onInputChange={value => onChange({ target: { value } })}\n                components={defaultComponents}\n                placeholder={\"Search\"}\n                options={options}\n                onChange={handleSelect}\n              />\n            </SelectContainer>\n          );\n        }}\n      </PlacesAutocomplete>\n    </ListItem>\n  );\n}\n\nconst defaultComponents = {\n  DropdownIndicator: () => null,\n  IndicatorSeparator: () => null\n};\n\nconst searchOptions = {\n  location: new google.maps.LatLng(-37, 144),\n  radius: 5000,\n  componentRestrictions: {\n    country: \"AU\"\n  }\n};\n\nconst SelectContainer = styled.div`\n  width: 100%;\n`;\n\nexport { PlacesSearch };\n","import React, { useCallback, useMemo } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction CurrentLocation({ style }: Props) {\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const saveSearchedAddress = useCallback(() => {\n    if (searchedAddress) {\n      const addresses = [...savedAddresses, searchedAddress];\n      setSavedAddresses(addresses);\n    }\n  }, [savedAddresses, setSavedAddresses, searchedAddress]);\n\n  const existingLocation = useMemo(\n    () =>\n      !!searchedAddress &&\n      !!savedAddresses.find(\n        address => address.placeId === searchedAddress.placeId\n      ),\n    [savedAddresses, searchedAddress]\n  );\n\n  if (!searchedAddress) {\n    return null;\n  }\n\n  return (\n    <ListItem\n      button\n      onClick={() => setCurrentPosition(searchedAddress.location)}\n    >\n      <ListItemIcon>\n        <img\n          src={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n          alt={\"Pin Icon\"}\n        />\n      </ListItemIcon>\n      <ListItemText\n        primary={searchedAddress.firstLine}\n        secondary={searchedAddress.secondLine}\n      ></ListItemText>\n      <ListItemSecondaryAction>\n        <Button\n          disabled={existingLocation}\n          variant=\"outlined\"\n          onClick={() => saveSearchedAddress()}\n        >\n          Save\n        </Button>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport { CurrentLocation };\n","import React, {\n  useState,\n  useCallback,\n  Fragment,\n  FunctionComponent\n} from \"react\";\nimport { List, ListItem, ListItemText, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\ninterface Props {\n  title: string;\n  subHeader: React.ReactElement;\n}\n\nconst ExpandableList: FunctionComponent<Props> = ({\n  title,\n  subHeader,\n  children\n}) => {\n  const [open, setOpen] = useState(true);\n  const handleClick = useCallback(() => setOpen(!open), [setOpen, open]);\n\n  return (\n    <Fragment>\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding subheader={subHeader}>\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport { ExpandableList };\n","import React, { useCallback } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Typography,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction SavedLocations() {\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n\n  const deleteAddress = useCallback(\n    ({ placeId: placeIdToRemove }) => {\n      const remaining = savedAddresses.filter(\n        ({ placeId }) => placeIdToRemove !== placeId\n      );\n      setSavedAddresses(remaining);\n    },\n    [savedAddresses, setSavedAddresses]\n  );\n\n  return (\n    <ExpandableList\n      title=\"Saved Locations\"\n      subHeader={<NoLocationsSubheader enabled={savedAddresses.length === 0} />}\n    >\n      {savedAddresses.map(address => (\n        <ListItem\n          key={address.placeId}\n          button\n          onClick={() => setCurrentPosition(address.location)}\n        >\n          <ListItemIcon>\n            <img\n              src={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n              alt={\"Pin Icon\"}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={address.firstLine}\n            secondary={address.secondLine}\n          />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => deleteAddress(address)}>\n              <CloseIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No saved locations yet...</Typography>;\n}\n\nexport { SavedLocations };\n","import React, { useCallback } from \"react\";\nimport moment from \"moment\";\nimport Circle from \"@material-ui/icons/LensTwoTone\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\nimport { SuspectData } from \"reactn/default\";\n\nfunction Suspects() {\n  const [suspects, setSuspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const eligibleSuspects = suspects.filter(({ startTime, endTime }) =>\n    moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n  const toggleVisibility = useCallback(\n    (suspect: SuspectData) => {\n      const newSuspects = [...suspects];\n      const newSuspect = { ...suspect, visible: !suspect.visible };\n      const i = suspects.indexOf(suspect);\n      newSuspects[i] = newSuspect;\n      setSuspects(newSuspects);\n    },\n    [suspects, setSuspects]\n  );\n  return (\n    <ExpandableList\n      title=\"Suspect Locations\"\n      subHeader={<NoLocationsSubheader enabled={suspects.length === 0} />}\n    >\n      {eligibleSuspects.map((suspect, i) => (\n        <ListItem\n          key={i}\n          button\n          onClick={() => setCurrentPosition(suspect.location)}\n        >\n          <ListItemIcon>\n            <Circle style={{ color: suspect.color }} fontSize={\"large\"} />\n          </ListItemIcon>\n          <ListItemText primary={suspect.name} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => toggleVisibility(suspect)}>\n              {suspect.visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No suspects found</Typography>;\n}\n\nexport { Suspects };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  PlacesSearch,\n  CurrentLocation,\n  SavedLocations,\n  Suspects\n} from \"./components\";\n\ntype Props = {\n  style: React.CSSProperties;\n};\n\nfunction SideBar({ ...rest }: Props) {\n  return (\n    <List component={Card} {...rest}>\n      <PlacesSearch />\n      <CurrentLocation />\n      <SavedLocations />\n      <Suspects />\n    </List>\n  );\n}\n\nexport { SideBar };\n","import \"./utils/setupDefaults\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar, Map, Filters } from \"./components\";\n\nfunction App({ ...rest }) {\n  return (\n    <OuterContainer {...rest}>\n      <SideBar style={{ flex: \"1 1 100px\" }} />\n      <ColumnContainer style={{ flex: \"5 5 0\" }}>\n        <Map />\n        <Filters />\n      </ColumnContainer>\n    </OuterContainer>\n  );\n}\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst OuterContainer = styled(ColumnContainer)`\n  flex-direction: row;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}