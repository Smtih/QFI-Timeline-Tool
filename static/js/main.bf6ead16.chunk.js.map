{"version":3,"sources":["App/utils/reactnPersist.tsx","App/utils/getQueryData.ts","App/utils/setupDefaults.tsx","App/components/Filters/Filters.tsx","App/components/Map/Map.tsx","App/components/SideBar/components/PlacesSearch/PlacesSearch.tsx","App/components/SideBar/components/CurrentLocation/components/SaveLocationModal.tsx","App/components/SideBar/components/CurrentLocation/CurrentLocation.tsx","components/ExpandableList.tsx","App/components/SideBar/components/SavedLocations/SavedLocations.tsx","App/components/SideBar/components/Suspects/Suspects.tsx","App/components/SideBar/SideBar.tsx","App/App.tsx","index.tsx"],"names":["Persist","initialGlobal","timeoutMs","globalStorageKey","timeoutStorageKey","localStorage","setItem","this","String","storedTimeout","getItem","Number","onComplete","global","getGlobal","addCallback","storeGlobal","setGlobal","JSON","stringify","lastModified","moment","toISOString","item","parse","diff","queryString","window","location","search","key","timeout","undefined","getQueryData","a","Tabletop","init","parseNumbers","sheets","suspectData","elements","suspects","map","parseSuspect","addressData","savedAddresses","toMappable","defaultDate","defaultLat","defaultLng","defaultZoomLevel","startDate","endDate","intervalMinutes","currentDate","defaultCenter","lat","lng","defaultZoom","rest","randomLocation","radius","visible","w","Math","sqrt","random","t","PI","x","cos","sin","initialise","setTabletopData","then","history","replaceState","document","title","pathname","Filters","useGlobal","setCurrentDate","interval","Container","Row","Typography","formatDate","style","paddingRight","textAlign","Slider","value","unix","onChange","event","step","min","max","paddingLeft","date","format","styled","div","Map","currentPosition","setCurrentPosition","searchedAddress","useState","info","setInfo","eligibleSuspects","filter","startTime","endTime","isBetween","width","height","position","google","zoom","initialCenter","center","onDragend","i","firstLine","secondLine","onClick","icon","color","name","fillColor","strokeColor","onClose","PlacesSearch","searchString","setSearchString","setSearchedAddress","handleChange","useCallback","handleSelect","suggestion","description","geocodeByPlaceId","placeId","results","getLatLng","formattedSuggestion","mainText","secondaryText","catch","error","console","ListItem","component","debounce","searchOptions","maps","LatLng","getInputProps","suggestions","Autocomplete","display","flex","options","getOptionLabel","onInputChange","inputValue","freeSolo","selectOnFocus","renderInput","params","TextField","fullWidth","label","variant","componentRestrictions","country","SaveLocationModal","closeModal","setSavedAddresses","locationName","setLocationName","saveSearchedAddress","formattedLocation","trim","addresses","StyledContainer","StyledPaper","onFocus","target","select","autoFocus","defaultValue","Button","marginTop","disabled","Paper","CurrentLocation","isModalOpen","setModalOpen","existingLocation","useMemo","find","address","button","ListItemIcon","src","alt","ListItemText","primary","secondary","ListItemSecondaryAction","Modal","outline","alignItems","justifyContent","open","ExpandableList","subHeader","children","setOpen","handleClick","ExpandLess","ExpandMore","Collapse","in","unmountOnExit","List","disablePadding","subheader","SavedLocations","deleteAddress","placeIdToRemove","remaining","NoLocationsSubheader","enabled","length","IconButton","Suspects","setSuspects","toggleVisibility","suspect","newSuspects","newSuspect","indexOf","fontSize","SideBar","Card","App","OuterContainer","ColumnContainer","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bf6ead16.chunk.js","sourcesContent":["import moment from \"moment\";\nimport { State } from \"reactn/default\";\nimport { setGlobal, addCallback } from \"reactn\";\n\nconst KEY_BASE = \"QFI_TIMELINE_TOOL\";\n\nclass Persist {\n  private globalStorageKey = `${KEY_BASE}_GLOBAL`;\n  private timeoutStorageKey = `${KEY_BASE}_TIMEOUT`;\n  private timeoutMs: number;\n\n  constructor(private initialGlobal: State, timeoutMs?: number) {\n    if (timeoutMs != null) {\n      localStorage.setItem(this.timeoutStorageKey, String(timeoutMs));\n      this.timeoutMs = timeoutMs;\n    } else {\n      const storedTimeout = localStorage.getItem(this.timeoutStorageKey);\n\n      if (storedTimeout == null) {\n        this.timeoutMs = 12 * 60 * 60 * 1000;\n        localStorage.setItem(this.timeoutStorageKey, String(this.timeoutMs));\n      } else {\n        this.timeoutMs = Number(storedTimeout);\n      }\n    }\n  }\n\n  initialise(onComplete: (global: State) => void): void {\n    const global = this.getGlobal();\n    addCallback(global => this.storeGlobal(global));\n    setGlobal(global);\n    onComplete(global);\n  }\n\n  storeGlobal(global: State): void {\n    localStorage.setItem(\n      this.globalStorageKey,\n      JSON.stringify({\n        lastModified: moment().toISOString(),\n        global\n      })\n    );\n  }\n\n  getGlobal(): State {\n    const item = localStorage.getItem(this.globalStorageKey);\n    if (!item) {\n      return this.initialGlobal;\n    }\n\n    const { lastModified, global } = JSON.parse(item);\n    if (lastModified && moment().diff(lastModified) > this.timeoutMs) {\n      return this.initialGlobal;\n    }\n\n    if (!global) {\n      return this.initialGlobal;\n    }\n\n    return global;\n  }\n}\n\nexport { Persist };\n","import queryString from \"query-string\";\n\ninterface QueryData {\n  key?: string;\n  timeout?: number;\n}\n\nfunction getQueryData(): QueryData {\n  const { key, timeout } = queryString.parse(window.location.search);\n  return {\n    key: typeof key === \"string\" ? key : undefined,\n    timeout:\n      typeof timeout === \"string\" ? Number(timeout) * 60 * 1000 : undefined\n  };\n}\n\nexport { getQueryData };\n","import Tabletop from \"tabletop\";\nimport { setGlobal } from \"reactn\";\nimport { Persist } from \"./reactnPersist\";\nimport { State, SuspectData } from \"reactn/default\";\nimport { getQueryData } from \"./getQueryData\";\n\ninterface LocationData {\n  lat: number;\n  lng: number;\n}\n\ninterface SuspectSheetData extends LocationData {\n  name: string;\n  color: string;\n  address: string;\n  startTime: string;\n  endTime: string;\n  radius: number;\n}\n\ninterface AddressSheetData extends LocationData {\n  placeId: string;\n  firstLine: string;\n  secondLine: string;\n}\n\ninterface SettingSheetData {\n  defaultDate: string;\n  defaultLat: string;\n  defaultLng: string;\n  startDate: string;\n  endDate: string;\n  intervalMinutes: number;\n  defaultZoomLevel: number;\n}\n\nconst { key, timeout } = getQueryData();\n\nasync function setTabletopData(global: State): Promise<void> {\n  if (global.key == null && key) {\n    const sheets = await Tabletop.init({\n      key,\n      parseNumbers: true\n    });\n    const suspectData: SuspectSheetData[] = sheets[\"Suspects\"].elements;\n    const suspects = suspectData.map(parseSuspect);\n\n    const addressData: AddressSheetData[] = sheets[\"Locations\"].elements;\n    const savedAddresses = addressData.map(toMappable);\n\n    const {\n      defaultDate,\n      defaultLat,\n      defaultLng,\n      defaultZoomLevel,\n      startDate,\n      endDate,\n      intervalMinutes\n    }: SettingSheetData = sheets[\"Settings\"].elements[0];\n\n    await setGlobal({\n      ...global,\n      key,\n      suspects,\n      savedAddresses,\n      currentDate: defaultDate,\n      defaultCenter: { lat: defaultLat, lng: defaultLng },\n      defaultZoom: defaultZoomLevel,\n      startDate,\n      endDate,\n      intervalMinutes\n    });\n  }\n}\n\nfunction parseSuspect({ lat, lng, ...rest }: SuspectSheetData): SuspectData {\n  return {\n    ...rest,\n    location: randomLocation({ lat, lng }, rest.radius),\n    visible: true\n  };\n}\n\nfunction randomLocation({ lat, lng }: LocationData, radius: number) {\n  // Convert radius from meters to degrees\n  const radiusInDegrees = radius / 111000;\n\n  const w = radiusInDegrees * Math.sqrt(Math.random());\n  const t = 2 * Math.PI * Math.random();\n  const x = w * Math.cos(t);\n  const y = w * Math.sin(t);\n\n  // Adjust the x-coordinate for the shrinking of the east-west distances\n  const new_x = x / Math.cos((lat * Math.PI) / 180);\n\n  const foundLongitude = new_x + lng;\n  const foundLatitude = y + lat;\n\n  return { lat: foundLatitude, lng: foundLongitude };\n}\n\nfunction toMappable({ lat, lng, ...rest }: LocationData) {\n  return {\n    ...rest,\n    location: { lat, lng }\n  };\n}\n\nconst defaultGlobal = {\n  savedAddresses: [],\n  suspects: [],\n  currentDate: \"2019-05-12T10:00:00.000+10\",\n  defaultCenter: { lat: -37.714145, lng: 145.065955 },\n  defaultZoom: 14,\n  intervalMinutes: 30,\n  startDate: \"2019-05-12T06:00:00.000+10\",\n  endDate: \"2019-05-14T22:00:00.000+10\"\n};\n\nconst persist = new Persist(defaultGlobal, timeout);\npersist.initialise(global => {\n  setTabletopData(global).then(() => {\n    window.history.replaceState({}, document.title, window.location.pathname);\n  });\n});\n\nexport { persist };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useGlobal } from \"reactn\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Filters({ ...rest }) {\n  const [currentDate, setCurrentDate] = useGlobal(\"currentDate\");\n  const [startDate] = useGlobal(\"startDate\");\n  const [endDate] = useGlobal(\"endDate\");\n  const [interval] = useGlobal(\"intervalMinutes\");\n\n  return (\n    <Container {...rest}>\n      <Row>\n        <Typography>{formatDate(currentDate)}</Typography>\n      </Row>\n      <Row>\n        <Typography style={{ paddingRight: 16, textAlign: \"right\" }}>\n          {formatDate(startDate)}\n        </Typography>\n        <Slider\n          value={moment(currentDate).unix()}\n          onChange={(event, value) =>\n            setCurrentDate(moment.unix(value as number).toISOString())\n          }\n          step={interval * 60}\n          min={moment(startDate).unix()}\n          max={moment(endDate).unix()}\n        />\n        <Typography style={{ paddingLeft: 16, textAlign: \"left\" }}>\n          {formatDate(endDate)}\n        </Typography>\n      </Row>\n    </Container>\n  );\n}\n\nexport function formatDate(date: string): string {\n  return moment(date).format(\"DD/MM/YYYY hh:mm a\");\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport { Filters };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useGlobal, useState } from \"reactn\";\nimport {\n  Map as GoogleMap,\n  Circle,\n  Marker,\n  InfoWindow\n} from \"google-maps-react\";\nimport { formatDate } from \"../Filters\";\n\ninterface Props {}\n\ninterface Info {\n  location: google.maps.LatLngLiteral;\n  firstLine: string;\n  secondLine: string;\n}\n\nfunction Map({ ...rest }: Props) {\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [suspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [defaultZoom] = useGlobal(\"defaultZoom\");\n  const [defaultCenter] = useGlobal(\"defaultCenter\");\n\n  const [info, setInfo] = useState<Info>();\n\n  const eligibleSuspects = suspects.filter(\n    ({ startTime, endTime, visible }) =>\n      visible &&\n      moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n\n  return (\n    <Container\n      style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n      {...rest}\n    >\n      <GoogleMap\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        google={google}\n        zoom={defaultZoom}\n        initialCenter={defaultCenter}\n        center={currentPosition}\n        onDragend={() => setCurrentPosition(undefined)}\n      >\n        {savedAddresses.map(({ firstLine, secondLine, location }, i) => (\n          <Marker\n            onClick={() => {\n              setInfo({ location, firstLine, secondLine });\n            }}\n            key={i}\n            title={firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n            position={location}\n          />\n        ))}\n        {eligibleSuspects.map(\n          ({ location, radius, color, name, startTime, endTime }, i) => (\n            <Circle\n              onClick={() => {\n                setInfo({\n                  location,\n                  firstLine: name,\n                  secondLine: `${formatDate(startTime)} - ${formatDate(\n                    endTime\n                  )}`\n                });\n              }}\n              key={i}\n              center={location}\n              radius={radius}\n              fillColor={color}\n              strokeColor={color}\n            />\n          )\n        )}\n        {searchedAddress && (\n          <Marker\n            onClick={() => {\n              setInfo(searchedAddress);\n            }}\n            title={searchedAddress.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            position={searchedAddress.location}\n          />\n        )}\n        <InfoWindow\n          visible={!!info}\n          position={info?.location}\n          onClose={() => setInfo(undefined)}\n        >\n          <div>\n            <p>{info?.firstLine}</p>\n            <p>{info?.secondLine}</p>\n          </div>\n        </InfoWindow>\n      </GoogleMap>\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport { Map };\n","import React, { useState, useCallback } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem } from \"@material-ui/core\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction PlacesSearch({ ...rest }: Props) {\n  const [searchString, setSearchString] = useState(\"\");\n  const [, setSearchedAddress] = useGlobal(\"searchedAddress\");\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [defaultCenter] = useGlobal(\"defaultCenter\");\n\n  const handleChange = useCallback(\n    (searchString: string) => {\n      if (typeof searchString === \"string\") {\n        setSearchString(searchString);\n      } else {\n        setSearchString(\"\");\n      }\n    },\n    [setSearchString]\n  );\n\n  const handleSelect = useCallback(\n    (event, suggestion) => {\n      if (!suggestion) {\n        return;\n      }\n      handleChange(suggestion.description);\n      geocodeByPlaceId(suggestion.placeId)\n        .then(results => getLatLng(results[0]))\n        .then(location => {\n          setSearchedAddress({\n            placeId: suggestion.placeId,\n            firstLine: suggestion.formattedSuggestion.mainText,\n            secondLine: suggestion.formattedSuggestion.secondaryText,\n            location\n          });\n          setCurrentPosition(location);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [handleChange, setSearchedAddress, setCurrentPosition]\n  );\n\n  return (\n    <ListItem component=\"div\" {...rest}>\n      <PlacesAutocomplete\n        debounce={500}\n        value={searchString}\n        onChange={handleChange}\n        searchOptions={{\n          location: new google.maps.LatLng(currentPosition || defaultCenter),\n          ...searchOptions\n        }}\n      >\n        {({ getInputProps, suggestions }) => {\n          const { onChange, value } = getInputProps();\n\n          return (\n            <Autocomplete\n              style={{ display: \"flex\", flex: 1 }}\n              options={[...suggestions]}\n              getOptionLabel={suggestion => suggestion.description}\n              onInputChange={onChange}\n              onChange={handleSelect}\n              inputValue={value}\n              freeSolo\n              selectOnFocus\n              renderInput={params => (\n                <TextField\n                  {...params}\n                  fullWidth\n                  label={\"Places Search\"}\n                  variant={\"outlined\"}\n                />\n              )}\n            />\n          );\n        }}\n      </PlacesAutocomplete>\n    </ListItem>\n  );\n}\n\nconst searchOptions = {\n  radius: 5000,\n  componentRestrictions: {\n    country: \"AU\"\n  }\n};\n\nexport { PlacesSearch };\n","import React, { useCallback, FC, useState } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { Container, TextField, Paper, Button } from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\ninterface Props {\n  closeModal: () => void;\n}\n\nconst SaveLocationModal: FC<Props> = ({ closeModal }) => {\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [locationName, setLocationName] = useState(\n    searchedAddress?.firstLine || \"\"\n  );\n\n  const saveSearchedAddress = useCallback(() => {\n    const formattedLocation = locationName.trim();\n    if (!formattedLocation || !searchedAddress) return;\n    const addresses = [\n      ...savedAddresses,\n      { ...searchedAddress, firstLine: formattedLocation }\n    ];\n    setSavedAddresses(addresses);\n    closeModal();\n  }, [\n    locationName,\n    searchedAddress,\n    savedAddresses,\n    setSavedAddresses,\n    closeModal\n  ]);\n\n  return (\n    <StyledContainer>\n      <StyledPaper>\n        <TextField\n          onFocus={event => {\n            event.target.select();\n          }}\n          autoFocus\n          value={locationName}\n          onChange={event => {\n            setLocationName(event.target.value);\n          }}\n          label={\"Location Name\"}\n          defaultValue={locationName}\n        />\n        <Button\n          style={{ marginTop: 8 }}\n          disabled={!locationName.trim()}\n          variant=\"outlined\"\n          onClick={saveSearchedAddress}\n        >\n          Save\n        </Button>\n      </StyledPaper>\n    </StyledContainer>\n  );\n};\n\nconst StyledPaper = styled(Paper)`\n  min-width: 300px;\n  display: flex;\n  flex-direction: column;\n  padding: 16px;\n`;\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n  align-self: center;\n  justify-self: center;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport { SaveLocationModal };\n","import React, { useMemo, useState } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  ListItemSecondaryAction,\n  Modal\n} from \"@material-ui/core\";\nimport { SaveLocationModal } from \"./components\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction CurrentLocation({ style }: Props) {\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [isModalOpen, setModalOpen] = useState(false);\n\n  const existingLocation = useMemo(\n    () =>\n      !!searchedAddress &&\n      !!savedAddresses.find(\n        address => address.placeId === searchedAddress.placeId\n      ),\n    [savedAddresses, searchedAddress]\n  );\n\n  if (!searchedAddress) {\n    return null;\n  }\n\n  return (\n    <>\n      <ListItem\n        button\n        onClick={() => setCurrentPosition(searchedAddress.location)}\n      >\n        <ListItemIcon>\n          <img\n            src={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            alt={\"Pin Icon\"}\n          />\n        </ListItemIcon>\n        <ListItemText\n          primary={searchedAddress.firstLine}\n          secondary={searchedAddress.secondLine}\n        ></ListItemText>\n        <ListItemSecondaryAction>\n          <Button\n            disabled={existingLocation}\n            variant=\"outlined\"\n            onClick={() => setModalOpen(true)}\n          >\n            Save\n          </Button>\n        </ListItemSecondaryAction>\n      </ListItem>\n      <Modal\n        style={{\n          outline: 0,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n        open={isModalOpen}\n      >\n        <SaveLocationModal closeModal={() => setModalOpen(false)} />\n      </Modal>\n    </>\n  );\n}\n\nexport { CurrentLocation };\n","import React, {\n  useState,\n  useCallback,\n  Fragment,\n  FunctionComponent\n} from \"react\";\nimport { List, ListItem, ListItemText, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\ninterface Props {\n  title: string;\n  subHeader: React.ReactElement;\n}\n\nconst ExpandableList: FunctionComponent<Props> = ({\n  title,\n  subHeader,\n  children\n}) => {\n  const [open, setOpen] = useState(true);\n  const handleClick = useCallback(() => setOpen(!open), [setOpen, open]);\n\n  return (\n    <Fragment>\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding subheader={subHeader}>\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport { ExpandableList };\n","import React, { useCallback } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Typography,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction SavedLocations() {\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n\n  const deleteAddress = useCallback(\n    ({ placeId: placeIdToRemove }) => {\n      const remaining = savedAddresses.filter(\n        ({ placeId }) => placeIdToRemove !== placeId\n      );\n      setSavedAddresses(remaining);\n    },\n    [savedAddresses, setSavedAddresses]\n  );\n\n  return (\n    <ExpandableList\n      title=\"Saved Locations\"\n      subHeader={<NoLocationsSubheader enabled={savedAddresses.length === 0} />}\n    >\n      {savedAddresses.map(address => (\n        <ListItem\n          key={address.placeId}\n          button\n          onClick={() => setCurrentPosition(address.location)}\n        >\n          <ListItemIcon>\n            <img\n              src={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n              alt={\"Pin Icon\"}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={address.firstLine}\n            secondary={address.secondLine}\n          />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => deleteAddress(address)}>\n              <CloseIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No saved locations yet...</Typography>;\n}\n\nexport { SavedLocations };\n","import React, { useCallback } from \"react\";\nimport moment from \"moment\";\nimport Circle from \"@material-ui/icons/LensTwoTone\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\nimport { SuspectData } from \"reactn/default\";\n\nfunction Suspects() {\n  const [suspects, setSuspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const eligibleSuspects = suspects.filter(({ startTime, endTime }) =>\n    moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n  const toggleVisibility = useCallback(\n    (suspect: SuspectData) => {\n      const newSuspects = [...suspects];\n      const newSuspect = { ...suspect, visible: !suspect.visible };\n      const i = suspects.indexOf(suspect);\n      newSuspects[i] = newSuspect;\n      setSuspects(newSuspects);\n    },\n    [suspects, setSuspects]\n  );\n  return (\n    <ExpandableList\n      title=\"Suspect Locations\"\n      subHeader={<NoLocationsSubheader enabled={suspects.length === 0} />}\n    >\n      {eligibleSuspects.map((suspect, i) => (\n        <ListItem\n          key={i}\n          button\n          onClick={() => setCurrentPosition(suspect.location)}\n        >\n          <ListItemIcon>\n            <Circle style={{ color: suspect.color }} fontSize={\"large\"} />\n          </ListItemIcon>\n          <ListItemText primary={suspect.name} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => toggleVisibility(suspect)}>\n              {suspect.visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No suspects found</Typography>;\n}\n\nexport { Suspects };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  PlacesSearch,\n  CurrentLocation,\n  SavedLocations,\n  Suspects\n} from \"./components\";\n\ntype Props = {\n  style: React.CSSProperties;\n};\n\nfunction SideBar({ ...rest }: Props) {\n  return (\n    <List component={Card} {...rest}>\n      <PlacesSearch />\n      <CurrentLocation />\n      <SavedLocations />\n      <Suspects />\n    </List>\n  );\n}\n\nexport { SideBar };\n","import \"./utils/setupDefaults\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar, Map, Filters } from \"./components\";\n\nfunction App({ ...rest }) {\n  return (\n    <OuterContainer {...rest}>\n      <SideBar style={{ flex: \"1 1 100px\" }} />\n      <ColumnContainer style={{ flex: \"5 5 0\" }}>\n        <Map />\n        <Filters />\n      </ColumnContainer>\n    </OuterContainer>\n  );\n}\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst OuterContainer = styled(ColumnContainer)`\n  flex-direction: row;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}