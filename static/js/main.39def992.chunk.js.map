{"version":3,"sources":["App/utils/reactnPersist.tsx","App/utils/setupDefaults.tsx","App/components/Filters/Filters.tsx","App/components/Map/Map.tsx","App/components/SideBar/components/PlacesSearch/PlacesSearch.tsx","App/components/SideBar/components/CurrentLocation/CurrentLocation.tsx","components/ExpandableList.tsx","App/components/SideBar/components/SavedLocations/SavedLocations.tsx","App/components/SideBar/components/Suspects/Suspects.tsx","App/components/SideBar/SideBar.tsx","App/App.tsx","index.tsx"],"names":["Persist","initialGlobal","invalidateMs","localStorageKey","this","global","getGlobal","addCallback","storeGlobal","setGlobal","localStorage","setItem","JSON","stringify","lastModified","moment","toISOString","item","getItem","parse","diff","toSuspectData","name","radius","startTime","endTime","location","lat","lng","Tabletop","init","key","simpleSheet","parseNumbers","then","data","map","suspects","savedAddresses","currentDate","initialise","Filters","rest","useGlobal","setCurrentDate","unixDate","unix","Container","Row","Typography","formatDate","style","paddingRight","textAlign","startDate","Slider","value","onChange","event","step","min","max","endDate","paddingLeft","date","format","styled","div","Map","currentPosition","setCurrentPosition","searchedAddress","eligibleSuspects","filter","isBetween","undefined","width","height","position","google","zoom","defaultZoom","initialCenter","defaultCenter","center","onDragend","address","i","title","firstLine","icon","suspect","PlacesSearch","useState","searchString","setSearchString","setSearchedAddress","handleChange","useCallback","handleSelect","suggestion","description","geocodeByPlaceId","placeId","results","getLatLng","full","formattedSuggestion","mainText","secondLine","secondaryText","catch","error","console","ListItem","component","debounce","searchOptions","getInputProps","suggestions","options","label","SelectContainer","menuIsOpen","length","filterOption","onInputChange","target","components","defaultComponents","placeholder","DropdownIndicator","IndicatorSeparator","window","maps","LatLng","componentRestrictions","country","CurrentLocation","setSavedAddresses","saveSearchedAddress","addresses","push","existingLocation","useMemo","find","ListItemIcon","src","alt","ListItemText","primary","secondary","ButtonContainer","Button","disabled","variant","onClick","ExpandableList","subHeader","children","open","setOpen","handleClick","button","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","subheader","SavedLocations","deleteAddress","placeIdToRemove","remaining","NoLocationsSubheader","enabled","IconButton","Suspects","SideBar","Card","ColumnContainer","OuterContainer","ReactDOM","render","flex","document","getElementById"],"mappings":"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","file":"static/js/main.39def992.chunk.js","sourcesContent":["import moment from \"moment\";\nimport { State } from \"reactn/default\";\nimport { setGlobal, addCallback } from \"reactn\";\n\nclass Persist {\n  localStorageKey = \"QFI_TIMELINE_TOOL\";\n  initialGlobal: State;\n  invalidateMs?: number;\n\n  constructor(initialGlobal: State, invalidateMs?: number) {\n    this.initialGlobal = initialGlobal;\n    this.invalidateMs = invalidateMs;\n  }\n\n  initialise(): void {\n    const global = this.getGlobal();\n    addCallback(global => this.storeGlobal(global));\n    setGlobal(global);\n  }\n\n  storeGlobal(global: State): void {\n    localStorage.setItem(\n      this.localStorageKey,\n      JSON.stringify({\n        lastModified: moment().toISOString(),\n        global\n      })\n    );\n  }\n\n  getGlobal(): State {\n    const item = localStorage.getItem(this.localStorageKey);\n    if (!item) {\n      return this.initialGlobal;\n    }\n\n    const { lastModified, global } = JSON.parse(item);\n    if (\n      lastModified &&\n      this.invalidateMs &&\n      moment().diff(lastModified) > this.invalidateMs\n    ) {\n      return this.initialGlobal;\n    }\n\n    if (!global) {\n      return this.initialGlobal;\n    }\n\n    return global;\n  }\n}\n\nexport { Persist };\n","import Tabletop from \"tabletop\";\nimport { getGlobal, setGlobal } from \"reactn\";\nimport { SuspectData } from \"reactn/default\";\nimport { Persist } from \"./reactnPersist\";\n\ninterface SheetData {\n  name: string;\n  address: string;\n  lat: number;\n  lng: number;\n  startTime: string;\n  endTime: string;\n  radius: number;\n}\n\nTabletop.init({\n  key: \"1qcsUcO02_Ppf965XmiuCYnZZik6pLiV3wO3fBvRwaQs\",\n  simpleSheet: true,\n  parseNumbers: true\n})\n  .then(data => data.map(toSuspectData))\n  .then((suspects: SheetData[]) => {\n    const global = getGlobal();\n    setGlobal({\n      ...global,\n      suspects\n    });\n  });\n\nfunction toSuspectData({\n  name,\n  radius,\n  startTime,\n  endTime,\n  lat,\n  lng\n}: SheetData): SuspectData {\n  return {\n    name,\n    radius,\n    startTime,\n    endTime,\n    location: { lat, lng }\n  };\n}\n\nconst defaultGlobal = {\n  savedAddresses: [],\n  suspects: [],\n  currentDate: \"2019-05-12T10:00:00.000Z\"\n};\n\nconst persist = new Persist(defaultGlobal, 12 * 60 * 60 * 1000);\npersist.initialise();\n\nexport { persist };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useGlobal } from \"reactn\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Filters({ ...rest }) {\n  const [currentDate, setCurrentDate] = useGlobal(\"currentDate\");\n  const unixDate = moment(currentDate).unix();\n  return (\n    <Container {...rest}>\n      <Row>\n        <Typography>{formatDate(unixDate)}</Typography>\n      </Row>\n      <Row>\n        <Typography style={{ paddingRight: 16, textAlign: \"right\" }}>\n          {formatDate(startDate)}\n        </Typography>\n        <Slider\n          value={unixDate}\n          onChange={(event, value) =>\n            setCurrentDate(moment.unix(value as number).toISOString())\n          }\n          step={3600}\n          min={startDate}\n          max={endDate}\n        />\n        <Typography style={{ paddingLeft: 16, textAlign: \"left\" }}>\n          {formatDate(endDate)}\n        </Typography>\n      </Row>\n    </Container>\n  );\n}\n\nfunction formatDate(date: number): string {\n  return moment.unix(date).format(\"DD/MM/YYYY hh:mm a\");\n}\n\nconst startDate = moment(\"2019-05-12T10:00:00.000Z\").unix();\nconst endDate = moment(\"2019-05-13T22:00:00.000Z\").unix();\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport { Filters };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useGlobal } from \"reactn\";\nimport { Map as GoogleMap, Circle, Marker } from \"google-maps-react\";\n\ninterface Props {}\n\nfunction Map({ ...rest }: Props) {\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [suspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const eligibleSuspects = suspects.filter(({ startTime, endTime }) =>\n    moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n\n  return (\n    <Container\n      style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n      {...rest}\n    >\n      <GoogleMap\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        google={google}\n        zoom={defaultZoom}\n        initialCenter={defaultCenter}\n        center={currentPosition}\n        onDragend={() => setCurrentPosition(undefined)}\n      >\n        {savedAddresses.map((address, i) => (\n          <Marker\n            title={address.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n            position={address.location}\n          />\n        ))}\n        {eligibleSuspects.map((suspect, i) => (\n          <Circle key={i} center={suspect.location} radius={suspect.radius} />\n        ))}\n        {searchedAddress && (\n          <Marker\n            title={searchedAddress.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            position={searchedAddress.location}\n          />\n        )}\n      </GoogleMap>\n    </Container>\n  );\n}\n\nconst defaultCenter = { lat: -37.774376, lng: 144.947494 };\nconst defaultZoom = 15;\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport { Map };\n","import React, { useState, useCallback } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport Select from \"react-select\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction PlacesSearch({ ...rest }: Props) {\n  const [searchString, setSearchString] = useState(\"\");\n  const [, setSearchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const handleChange = useCallback(\n    (searchString: string) => {\n      if (searchString) {\n        setSearchString(searchString);\n      }\n    },\n    [setSearchString]\n  );\n\n  const handleSelect = useCallback(\n    value => {\n      if (!value) {\n        return;\n      }\n      const suggestion = value.value;\n      handleChange(suggestion.description);\n      geocodeByPlaceId(suggestion.placeId)\n        .then(results => getLatLng(results[0]))\n        .then(location => {\n          setSearchedAddress({\n            placeId: suggestion.placeId,\n            full: suggestion.description,\n            firstLine: suggestion.formattedSuggestion.mainText,\n            secondLine: suggestion.formattedSuggestion.secondaryText,\n            location\n          });\n          setCurrentPosition(location);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [handleChange, setSearchedAddress, setCurrentPosition]\n  );\n\n  return (\n    <ListItem component=\"div\" {...rest}>\n      <PlacesAutocomplete\n        debounce={500}\n        value={searchString}\n        onChange={handleChange}\n        searchOptions={searchOptions}\n      >\n        {({ getInputProps, suggestions }) => {\n          const { onChange } = getInputProps();\n\n          const options = suggestions.map(suggestion => ({\n            value: suggestion,\n            label: suggestion.description\n          }));\n\n          return (\n            <SelectContainer>\n              <Select\n                menuIsOpen={options.length > 0}\n                filterOption={() => true}\n                onInputChange={value => onChange({ target: { value } })}\n                components={defaultComponents}\n                placeholder={\"Search\"}\n                options={options}\n                onChange={handleSelect}\n              />\n            </SelectContainer>\n          );\n        }}\n      </PlacesAutocomplete>\n    </ListItem>\n  );\n}\n\nconst defaultComponents = {\n  DropdownIndicator: () => null,\n  IndicatorSeparator: () => null\n};\n\nconst google = (window as any).google;\nconst searchOptions = {\n  location: new google.maps.LatLng(-37, 144),\n  radius: 5000,\n  componentRestrictions: {\n    country: \"AU\"\n  }\n};\n\nconst SelectContainer = styled.div`\n  width: 100%;\n`;\n\nexport { PlacesSearch };\n","import React, { Fragment, useCallback, useMemo } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button\n} from \"@material-ui/core\";\nimport styled from \"styled-components\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction CurrentLocation({ ...rest }: Props) {\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n\n  const saveSearchedAddress = useCallback(() => {\n    const addresses = [...savedAddresses];\n    if (searchedAddress) {\n      addresses.push(searchedAddress);\n    }\n    setSavedAddresses(addresses);\n  }, [savedAddresses, setSavedAddresses, searchedAddress]);\n\n  const existingLocation = useMemo(\n    () =>\n      !!searchedAddress &&\n      !!savedAddresses.find(\n        address => address.placeId === searchedAddress.placeId\n      ),\n    [savedAddresses, searchedAddress]\n  );\n\n  if (!searchedAddress) {\n    return null;\n  }\n\n  return (\n    <Fragment>\n      <ListItem component=\"div\" {...rest}>\n        <ListItemIcon>\n          <img\n            src={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            alt={\"Pin Icon\"}\n          />\n        </ListItemIcon>\n        <ListItemText\n          primary={searchedAddress.firstLine}\n          secondary={searchedAddress.secondLine}\n        ></ListItemText>\n      </ListItem>\n      <ButtonContainer>\n        <Button\n          disabled={existingLocation}\n          variant=\"outlined\"\n          onClick={saveSearchedAddress}\n        >\n          {existingLocation ? \"Saved\" : \"Save Location\"}\n        </Button>\n      </ButtonContainer>\n    </Fragment>\n  );\n}\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nexport { CurrentLocation };\n","import React, {\n  useState,\n  useCallback,\n  Fragment,\n  FunctionComponent\n} from \"react\";\nimport { List, ListItem, ListItemText, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\ninterface Props {\n  title: string;\n  subHeader: React.ReactElement;\n}\n\nconst ExpandableList: FunctionComponent<Props> = ({\n  title,\n  subHeader,\n  children\n}) => {\n  const [open, setOpen] = useState(true);\n  const handleClick = useCallback(() => setOpen(!open), [setOpen, open]);\n\n  return (\n    <Fragment>\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding subheader={subHeader}>\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport { ExpandableList };\n","import React, { useCallback } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Typography,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction SavedLocations() {\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n\n  const deleteAddress = useCallback(\n    ({ placeId: placeIdToRemove }) => {\n      const remaining = savedAddresses.filter(\n        ({ placeId }) => placeIdToRemove != placeId\n      );\n      setSavedAddresses(remaining);\n    },\n    [savedAddresses, setSavedAddresses]\n  );\n\n  return (\n    <ExpandableList\n      title=\"Saved Locations\"\n      subHeader={<NoLocationsSubheader enabled={savedAddresses.length === 0} />}\n    >\n      {savedAddresses.map(address => (\n        <ListItem\n          key={address.placeId}\n          button\n          onClick={() => setCurrentPosition(address.location)}\n        >\n          <ListItemText\n            primary={address.firstLine}\n            secondary={address.secondLine}\n          />\n          <ListItemIcon>\n            <IconButton onClick={() => deleteAddress(address)}>\n              <CloseIcon />\n            </IconButton>\n          </ListItemIcon>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No saved locations yet...</Typography>;\n}\n\nexport { SavedLocations };\n","import React from \"react\";\nimport moment from \"moment\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem, ListItemText, Typography } from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction Suspects() {\n  const [suspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const eligibleSuspects = suspects.filter(({ startTime, endTime }) =>\n    moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n  return (\n    <ExpandableList\n      title=\"Suspect Locations\"\n      subHeader={<NoLocationsSubheader enabled={suspects.length === 0} />}\n    >\n      {eligibleSuspects.map((suspect, i) => (\n        <ListItem\n          key={i}\n          button\n          onClick={() => setCurrentPosition(suspect.location)}\n        >\n          <ListItemText primary={suspect.name} />\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No suspects found</Typography>;\n}\n\nexport { Suspects };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  PlacesSearch,\n  CurrentLocation,\n  SavedLocations,\n  Suspects\n} from \"./components\";\n\ntype Props = {\n  style: React.CSSProperties;\n};\n\nfunction SideBar({ ...rest }: Props) {\n  return (\n    <List component={Card} {...rest}>\n      <PlacesSearch />\n      <CurrentLocation />\n      <SavedLocations />\n      <Suspects />\n    </List>\n  );\n}\n\nexport { SideBar };\n","import \"./utils/setupDefaults\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar, Map, Filters } from \"./components\";\n\nfunction App({ ...rest }) {\n  return (\n    <OuterContainer {...rest}>\n      <SideBar style={{ flex: \"1 1 100px\" }} />\n      <ColumnContainer style={{ flex: \"5 5 0\" }}>\n        <Map />\n        <Filters />\n      </ColumnContainer>\n    </OuterContainer>\n  );\n}\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst OuterContainer = styled(ColumnContainer)`\n  flex-direction: row;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}