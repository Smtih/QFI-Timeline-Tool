{"version":3,"sources":["App/utils/setupDefaults.tsx","App/utils/reactnPersist.tsx","App/components/Filters/Filters.tsx","App/components/Map/Map.tsx","App/components/SideBar/components/PlacesSearch/PlacesSearch.tsx","App/components/SideBar/components/CurrentLocation/CurrentLocation.tsx","components/ExpandableList.tsx","App/components/SideBar/components/SavedLocations/SavedLocations.tsx","App/components/SideBar/components/Suspects/Suspects.tsx","App/components/SideBar/SideBar.tsx","App/App.tsx","index.tsx"],"names":["global","a","defaultGlobal","Tabletop","init","key","parseNumbers","sheets","suspectData","elements","suspects","map","suspect","visible","toMappable","addressData","savedAddresses","setGlobal","lat","lng","location","currentDate","initialGlobal","invalidateMs","localStorageKey","this","onComplete","getGlobal","addCallback","storeGlobal","localStorage","setItem","JSON","stringify","lastModified","moment","toISOString","item","getItem","parse","diff","initialise","Filters","rest","useGlobal","setCurrentDate","unixDate","unix","Container","Row","Typography","formatDate","style","paddingRight","textAlign","startDate","Slider","value","onChange","event","step","min","max","endDate","paddingLeft","date","format","styled","div","Map","currentPosition","setCurrentPosition","searchedAddress","eligibleSuspects","filter","startTime","endTime","isBetween","undefined","width","height","position","google","zoom","defaultZoom","initialCenter","defaultCenter","center","onDragend","i","firstLine","title","icon","radius","color","fillColor","strokeColor","PlacesSearch","useState","searchString","setSearchString","setSearchedAddress","handleChange","useCallback","handleSelect","suggestion","description","geocodeByPlaceId","placeId","then","results","getLatLng","formattedSuggestion","mainText","secondLine","secondaryText","catch","error","console","ListItem","component","debounce","searchOptions","getInputProps","suggestions","options","label","SelectContainer","menuIsOpen","length","filterOption","onInputChange","target","components","defaultComponents","placeholder","DropdownIndicator","IndicatorSeparator","window","maps","LatLng","componentRestrictions","country","CurrentLocation","setSavedAddresses","saveSearchedAddress","addresses","existingLocation","useMemo","find","address","button","onClick","ListItemIcon","src","alt","ListItemText","primary","secondary","ListItemSecondaryAction","Button","disabled","variant","ExpandableList","subHeader","children","open","setOpen","handleClick","ExpandLess","ExpandMore","Collapse","in","timeout","unmountOnExit","List","disablePadding","subheader","SavedLocations","deleteAddress","placeIdToRemove","remaining","NoLocationsSubheader","enabled","IconButton","Suspects","setSuspects","toggleVisibility","newSuspects","newSuspect","indexOf","fontSize","name","SideBar","Card","ColumnContainer","OuterContainer","ReactDOM","render","flex","document","getElementById"],"mappings":"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","file":"static/js/main.84a2939d.chunk.js","sourcesContent":["import Tabletop from \"tabletop\";\nimport { setGlobal } from \"reactn\";\nimport { Persist } from \"./reactnPersist\";\nimport { State } from \"reactn/default\";\n\ninterface LocationData {\n  lat: number;\n  lng: number;\n}\n\ninterface SuspectSheetData extends LocationData {\n  name: string;\n  color: string;\n  address: string;\n  startTime: string;\n  endTime: string;\n  radius: number;\n}\n\ninterface AddressSheetData extends LocationData {\n  placeId: string;\n  firstLine: string;\n  secondLine: string;\n}\n\nasync function setTabletopData(global: State) {\n  if (global === defaultGlobal) {\n    const sheets = await Tabletop.init({\n      key: \"1qcsUcO02_Ppf965XmiuCYnZZik6pLiV3wO3fBvRwaQs\",\n      parseNumbers: true\n    });\n    const suspectData: SuspectSheetData[] = sheets[\"Suspects\"].elements;\n    const suspects = suspectData\n      .map(suspect => ({ ...suspect, visible: true }))\n      .map(toMappable);\n\n    const addressData: AddressSheetData[] = sheets[\"Locations\"].elements;\n    const savedAddresses = addressData.map(toMappable);\n\n    setGlobal({\n      ...global,\n      suspects,\n      savedAddresses\n    });\n  }\n}\n\nfunction toMappable({ lat, lng, ...rest }: LocationData) {\n  return {\n    ...rest,\n    location: { lat, lng }\n  };\n}\n\nconst defaultGlobal = {\n  savedAddresses: [],\n  suspects: [],\n  currentDate: \"2019-05-12T10:00:00.000+10\"\n};\n\nconst persist = new Persist(defaultGlobal, 12 * 60 * 60 * 1000);\npersist.initialise(setTabletopData);\n\nexport { persist };\n","import moment from \"moment\";\nimport { State } from \"reactn/default\";\nimport { setGlobal, addCallback } from \"reactn\";\n\nclass Persist {\n  localStorageKey = \"QFI_TIMELINE_TOOL\";\n  initialGlobal: State;\n  invalidateMs?: number;\n\n  constructor(initialGlobal: State, invalidateMs?: number) {\n    this.initialGlobal = initialGlobal;\n    this.invalidateMs = invalidateMs;\n  }\n\n  initialise(onComplete: (global: State) => void): void {\n    const global = this.getGlobal();\n    addCallback(global => this.storeGlobal(global));\n    setGlobal(global);\n    onComplete(global);\n  }\n\n  storeGlobal(global: State): void {\n    localStorage.setItem(\n      this.localStorageKey,\n      JSON.stringify({\n        lastModified: moment().toISOString(),\n        global\n      })\n    );\n  }\n\n  getGlobal(): State {\n    const item = localStorage.getItem(this.localStorageKey);\n    if (!item) {\n      return this.initialGlobal;\n    }\n\n    const { lastModified, global } = JSON.parse(item);\n    if (\n      lastModified &&\n      this.invalidateMs &&\n      moment().diff(lastModified) > this.invalidateMs\n    ) {\n      return this.initialGlobal;\n    }\n\n    if (!global) {\n      return this.initialGlobal;\n    }\n\n    return global;\n  }\n}\n\nexport { Persist };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport Slider from \"@material-ui/core/Slider\";\nimport { useGlobal } from \"reactn\";\nimport { Typography } from \"@material-ui/core\";\n\nfunction Filters({ ...rest }) {\n  const [currentDate, setCurrentDate] = useGlobal(\"currentDate\");\n  const unixDate = moment(currentDate).unix();\n  return (\n    <Container {...rest}>\n      <Row>\n        <Typography>{formatDate(unixDate)}</Typography>\n      </Row>\n      <Row>\n        <Typography style={{ paddingRight: 16, textAlign: \"right\" }}>\n          {formatDate(startDate)}\n        </Typography>\n        <Slider\n          value={unixDate}\n          onChange={(event, value) =>\n            setCurrentDate(moment.unix(value as number).toISOString())\n          }\n          step={1800}\n          min={startDate}\n          max={endDate}\n        />\n        <Typography style={{ paddingLeft: 16, textAlign: \"left\" }}>\n          {formatDate(endDate)}\n        </Typography>\n      </Row>\n    </Container>\n  );\n}\n\nfunction formatDate(date: number): string {\n  return moment.unix(date).format(\"DD/MM/YYYY hh:mm a\");\n}\n\nconst startDate = moment(\"2019-05-12T06:00:00.000+10\").unix();\nconst endDate = moment(\"2019-05-14T22:00:00.000+10\").unix();\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  justify-content: center;\n  padding: 16px;\n`;\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  align-content: center;\n  justify-content: center;\n`;\n\nexport { Filters };\n","import React from \"react\";\nimport moment from \"moment\";\nimport styled from \"styled-components\";\nimport { useGlobal } from \"reactn\";\nimport { Map as GoogleMap, Circle, Marker } from \"google-maps-react\";\n\ninterface Props {}\n\nfunction Map({ ...rest }: Props) {\n  const [currentPosition, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [savedAddresses] = useGlobal(\"savedAddresses\");\n  const [suspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const eligibleSuspects = suspects.filter(\n    ({ startTime, endTime, visible }) =>\n      visible &&\n      moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n\n  return (\n    <Container\n      style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n      {...rest}\n    >\n      <GoogleMap\n        style={{ width: \"100%\", height: \"100%\", position: \"relative\" }}\n        google={google}\n        zoom={defaultZoom}\n        initialCenter={defaultCenter}\n        center={currentPosition}\n        onDragend={() => setCurrentPosition(undefined)}\n      >\n        {savedAddresses.map(({ firstLine, location }, i) => (\n          <Marker\n            key={i}\n            title={firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n            position={location}\n          />\n        ))}\n        {eligibleSuspects.map(({ location, radius, color }, i) => (\n          <Circle\n            key={i}\n            center={location}\n            radius={radius}\n            fillColor={color}\n            strokeColor={color}\n          />\n        ))}\n        {searchedAddress && (\n          <Marker\n            title={searchedAddress.firstLine}\n            icon={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n            position={searchedAddress.location}\n          />\n        )}\n      </GoogleMap>\n    </Container>\n  );\n}\n\nconst defaultCenter = { lat: -37.714145, lng: 145.065955 };\nconst defaultZoom = 13;\n\nconst Container = styled.div`\n  display: flex;\n  flex: 1;\n`;\n\nexport { Map };\n","import React, { useState, useCallback } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport { ListItem } from \"@material-ui/core\";\nimport styled from \"styled-components\";\nimport PlacesAutocomplete, {\n  geocodeByPlaceId,\n  getLatLng\n} from \"react-places-autocomplete\";\nimport Select from \"react-select\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction PlacesSearch({ ...rest }: Props) {\n  const [searchString, setSearchString] = useState(\"\");\n  const [, setSearchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const handleChange = useCallback(\n    (searchString: string) => {\n      if (searchString) {\n        setSearchString(searchString);\n      }\n    },\n    [setSearchString]\n  );\n\n  const handleSelect = useCallback(\n    value => {\n      if (!value) {\n        return;\n      }\n      const suggestion = value.value;\n      handleChange(suggestion.description);\n      geocodeByPlaceId(suggestion.placeId)\n        .then(results => getLatLng(results[0]))\n        .then(location => {\n          setSearchedAddress({\n            placeId: suggestion.placeId,\n            firstLine: suggestion.formattedSuggestion.mainText,\n            secondLine: suggestion.formattedSuggestion.secondaryText,\n            location\n          });\n          setCurrentPosition(location);\n        })\n        .catch(error => {\n          console.error(error);\n        });\n    },\n    [handleChange, setSearchedAddress, setCurrentPosition]\n  );\n\n  return (\n    <ListItem component=\"div\" {...rest}>\n      <PlacesAutocomplete\n        debounce={500}\n        value={searchString}\n        onChange={handleChange}\n        searchOptions={searchOptions}\n      >\n        {({ getInputProps, suggestions }) => {\n          const { onChange } = getInputProps();\n\n          const options = suggestions.map(suggestion => ({\n            value: suggestion,\n            label: suggestion.description\n          }));\n\n          return (\n            <SelectContainer>\n              <Select\n                menuIsOpen={options.length > 0}\n                filterOption={() => true}\n                onInputChange={value => onChange({ target: { value } })}\n                components={defaultComponents}\n                placeholder={\"Search\"}\n                options={options}\n                onChange={handleSelect}\n              />\n            </SelectContainer>\n          );\n        }}\n      </PlacesAutocomplete>\n    </ListItem>\n  );\n}\n\nconst defaultComponents = {\n  DropdownIndicator: () => null,\n  IndicatorSeparator: () => null\n};\n\nconst google = (window as any).google;\nconst searchOptions = {\n  location: new google.maps.LatLng(-37, 144),\n  radius: 5000,\n  componentRestrictions: {\n    country: \"AU\"\n  }\n};\n\nconst SelectContainer = styled.div`\n  width: 100%;\n`;\n\nexport { PlacesSearch };\n","import React, { useCallback, useMemo } from \"react\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  Button,\n  ListItemSecondaryAction\n} from \"@material-ui/core\";\n\ntype Props = {\n  style?: React.CSSProperties;\n};\n\nfunction CurrentLocation({ style }: Props) {\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n  const [searchedAddress] = useGlobal(\"searchedAddress\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n\n  const saveSearchedAddress = useCallback(() => {\n    if (searchedAddress) {\n      const addresses = [...savedAddresses, searchedAddress];\n      setSavedAddresses(addresses);\n    }\n  }, [savedAddresses, setSavedAddresses, searchedAddress]);\n\n  const existingLocation = useMemo(\n    () =>\n      !!searchedAddress &&\n      !!savedAddresses.find(\n        address => address.placeId === searchedAddress.placeId\n      ),\n    [savedAddresses, searchedAddress]\n  );\n\n  if (!searchedAddress) {\n    return null;\n  }\n\n  return (\n    <ListItem\n      button\n      onClick={() => setCurrentPosition(searchedAddress.location)}\n    >\n      <ListItemIcon>\n        <img\n          src={\"http://maps.google.com/mapfiles/ms/icons/blue-dot.png\"}\n          alt={\"Pin Icon\"}\n        />\n      </ListItemIcon>\n      <ListItemText\n        primary={searchedAddress.firstLine}\n        secondary={searchedAddress.secondLine}\n      ></ListItemText>\n      <ListItemSecondaryAction>\n        <Button\n          disabled={existingLocation}\n          variant=\"outlined\"\n          onClick={() => saveSearchedAddress()}\n        >\n          Save\n        </Button>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport { CurrentLocation };\n","import React, {\n  useState,\n  useCallback,\n  Fragment,\n  FunctionComponent\n} from \"react\";\nimport { List, ListItem, ListItemText, Collapse } from \"@material-ui/core\";\nimport { ExpandLess, ExpandMore } from \"@material-ui/icons\";\n\ninterface Props {\n  title: string;\n  subHeader: React.ReactElement;\n}\n\nconst ExpandableList: FunctionComponent<Props> = ({\n  title,\n  subHeader,\n  children\n}) => {\n  const [open, setOpen] = useState(true);\n  const handleClick = useCallback(() => setOpen(!open), [setOpen, open]);\n\n  return (\n    <Fragment>\n      <ListItem button onClick={handleClick}>\n        <ListItemText primary={title} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        <List component=\"div\" disablePadding subheader={subHeader}>\n          {children}\n        </List>\n      </Collapse>\n    </Fragment>\n  );\n};\n\nexport { ExpandableList };\n","import React, { useCallback } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  Typography,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\n\nfunction SavedLocations() {\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const [savedAddresses, setSavedAddresses] = useGlobal(\"savedAddresses\");\n\n  const deleteAddress = useCallback(\n    ({ placeId: placeIdToRemove }) => {\n      const remaining = savedAddresses.filter(\n        ({ placeId }) => placeIdToRemove !== placeId\n      );\n      setSavedAddresses(remaining);\n    },\n    [savedAddresses, setSavedAddresses]\n  );\n\n  return (\n    <ExpandableList\n      title=\"Saved Locations\"\n      subHeader={<NoLocationsSubheader enabled={savedAddresses.length === 0} />}\n    >\n      {savedAddresses.map(address => (\n        <ListItem\n          key={address.placeId}\n          button\n          onClick={() => setCurrentPosition(address.location)}\n        >\n          <ListItemIcon>\n            <img\n              src={\"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"}\n              alt={\"Pin Icon\"}\n            />\n          </ListItemIcon>\n          <ListItemText\n            primary={address.firstLine}\n            secondary={address.secondLine}\n          />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => deleteAddress(address)}>\n              <CloseIcon />\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No saved locations yet...</Typography>;\n}\n\nexport { SavedLocations };\n","import React, { useCallback } from \"react\";\nimport moment from \"moment\";\nimport Circle from \"@material-ui/icons/LensTwoTone\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport VisibilityOffIcon from \"@material-ui/icons/VisibilityOff\";\nimport { useGlobal } from \"reactn\";\nimport {\n  ListItem,\n  ListItemText,\n  ListItemIcon,\n  Typography,\n  ListItemSecondaryAction,\n  IconButton\n} from \"@material-ui/core\";\nimport { ExpandableList } from \"components\";\nimport { SuspectData } from \"reactn/default\";\n\nfunction Suspects() {\n  const [suspects, setSuspects] = useGlobal(\"suspects\");\n  const [currentDate] = useGlobal(\"currentDate\");\n  const [, setCurrentPosition] = useGlobal(\"currentPosition\");\n  const eligibleSuspects = suspects.filter(({ startTime, endTime }) =>\n    moment(currentDate).isBetween(startTime, endTime, undefined, \"[)\")\n  );\n  const toggleVisibility = useCallback(\n    (suspect: SuspectData) => {\n      const newSuspects = [...suspects];\n      const newSuspect = { ...suspect, visible: !suspect.visible };\n      const i = suspects.indexOf(suspect);\n      newSuspects[i] = newSuspect;\n      setSuspects(newSuspects);\n    },\n    [suspects, setSuspects]\n  );\n  return (\n    <ExpandableList\n      title=\"Suspect Locations\"\n      subHeader={<NoLocationsSubheader enabled={suspects.length === 0} />}\n    >\n      {eligibleSuspects.map((suspect, i) => (\n        <ListItem\n          key={i}\n          button\n          onClick={() => setCurrentPosition(suspect.location)}\n        >\n          <ListItemIcon>\n            <Circle style={{ color: suspect.color }} fontSize={\"large\"} />\n          </ListItemIcon>\n          <ListItemText primary={suspect.name} />\n          <ListItemSecondaryAction>\n            <IconButton onClick={() => toggleVisibility(suspect)}>\n              {suspect.visible ? <VisibilityIcon /> : <VisibilityOffIcon />}\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      ))}\n    </ExpandableList>\n  );\n}\n\ninterface Props {\n  enabled: boolean;\n}\nfunction NoLocationsSubheader({ enabled, ...rest }: Props) {\n  if (!enabled) {\n    return null;\n  }\n  return <Typography>No suspects found</Typography>;\n}\n\nexport { Suspects };\n","import React from \"react\";\nimport List from \"@material-ui/core/List\";\nimport Card from \"@material-ui/core/Card\";\nimport {\n  PlacesSearch,\n  CurrentLocation,\n  SavedLocations,\n  Suspects\n} from \"./components\";\n\ntype Props = {\n  style: React.CSSProperties;\n};\n\nfunction SideBar({ ...rest }: Props) {\n  return (\n    <List component={Card} {...rest}>\n      <PlacesSearch />\n      <CurrentLocation />\n      <SavedLocations />\n      <Suspects />\n    </List>\n  );\n}\n\nexport { SideBar };\n","import \"./utils/setupDefaults\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { SideBar, Map, Filters } from \"./components\";\n\nfunction App({ ...rest }) {\n  return (\n    <OuterContainer {...rest}>\n      <SideBar style={{ flex: \"1 1 100px\" }} />\n      <ColumnContainer style={{ flex: \"5 5 0\" }}>\n        <Map />\n        <Filters />\n      </ColumnContainer>\n    </OuterContainer>\n  );\n}\n\nconst ColumnContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`;\n\nconst OuterContainer = styled(ColumnContainer)`\n  flex-direction: row;\n  height: 100vh;\n  width: 100vw;\n`;\n\nexport { App };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}